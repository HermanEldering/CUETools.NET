<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="chkExtractLog.Text" xml:space="preserve">
    <value>Extrahier Logdatei</value>
  </data>
  <data name="chkReducePriority.Size" type="System.Drawing.Size, System.Drawing">
    <value>209, 17</value>
  </data>
  <data name="chkReducePriority.Text" xml:space="preserve">
    <value>Reduziere Prozesspriorität auf Untätig</value>
  </data>
  <data name="chkTruncateExtra4206Samples.Size" type="System.Drawing.Size, System.Drawing">
    <value>225, 17</value>
  </data>
  <data name="chkTruncateExtra4206Samples.Text" xml:space="preserve">
    <value>Nullsamples abschneiden, falls vorhanden</value>
  </data>
  <data name="chkTruncateExtra4206Samples.ToolTip" xml:space="preserve">
    <value>Einige fehlerhafte FLAC-Kodierer fügen am Ende jeder Datei zusätzliche 4206 Nullsamples ein. Sie können automatisch erkannt und entfernt werden</value>
  </data>
  <data name="chkCreateCUEFileWhenEmbedded.Size" type="System.Drawing.Size, System.Drawing">
    <value>232, 17</value>
  </data>
  <data name="chkCreateCUEFileWhenEmbedded.Text" xml:space="preserve">
    <value>Erstelle .cue-Datei auch, wenn eingebettet</value>
  </data>
  <data name="chkCreateM3U.Size" type="System.Drawing.Size, System.Drawing">
    <value>151, 17</value>
  </data>
  <data name="chkCreateM3U.Text" xml:space="preserve">
    <value>Erstelle .m3u-Abspiellisten</value>
  </data>
  <data name="chkFillUpCUE.Size" type="System.Drawing.Size, System.Drawing">
    <value>255, 17</value>
  </data>
  <data name="chkFillUpCUE.Text" xml:space="preserve">
    <value>Fehlende CUE-Daten anhand der Tags auffüllen</value>
  </data>
  <data name="chkEmbedLog.Size" type="System.Drawing.Size, System.Drawing">
    <value>150, 17</value>
  </data>
  <data name="chkEmbedLog.Text" xml:space="preserve">
    <value>Bette Logdatei als Tag ein</value>
  </data>
  <data name="chkEmbedLog.ToolTip" xml:space="preserve">
    <value>Die Datei sollte im gleichen Verzeichnis sein und die Erweiterung .log haben.</value>
  </data>
  <data name="chkAutoCorrectFilenames.Size" type="System.Drawing.Size, System.Drawing">
    <value>183, 17</value>
  </data>
  <data name="chkAutoCorrectFilenames.Text" xml:space="preserve">
    <value>Audiodaten suchen, falls fehlend</value>
  </data>
  <data name="chkAutoCorrectFilenames.ToolTip" xml:space="preserve">
    <value>Zuvor Dateinamen korrigieren, wenn Audiodaten nicht gefunden werden können</value>
  </data>
  <data name="chkPreserveHTOA.Size" type="System.Drawing.Size, System.Drawing">
    <value>295, 17</value>
  </data>
  <data name="chkPreserveHTOA.Text" xml:space="preserve">
    <value>HTOA für Ausg. mit angeh. Lücken beibehalten</value>
  </data>
  <data name="lblWriteOffset.Text" xml:space="preserve">
    <value>Schreibe Offset:</value>
  </data>
  <data name="grpGeneral.Size" type="System.Drawing.Size, System.Drawing">
    <value>271, 249</value>
  </data>
  <data name="grpGeneral.Text" xml:space="preserve">
    <value>Allgemein</value>
  </data>
  <data name="lblFLACCompressionLevel.Size" type="System.Drawing.Size, System.Drawing">
    <value>101, 13</value>
  </data>
  <data name="lblFLACCompressionLevel.Text" xml:space="preserve">
    <value>Kompressionsstufe:</value>
  </data>
  <data name="chkFLACVerify.Size" type="System.Drawing.Size, System.Drawing">
    <value>79, 17</value>
  </data>
  <data name="chkFLACVerify.Text" xml:space="preserve">
    <value>Verifizieren</value>
  </data>
  <data name="chkWVStoreMD5.Size" type="System.Drawing.Size, System.Drawing">
    <value>154, 17</value>
  </data>
  <data name="chkWVStoreMD5.Text" xml:space="preserve">
    <value>Speichere MD5-Wert</value>
  </data>
  <data name="chkWVExtraMode.Size" type="System.Drawing.Size, System.Drawing">
    <value>87, 17</value>
  </data>
  <data name="chkWVExtraMode.Text" xml:space="preserve">
    <value>Extramodus:</value>
  </data>
  <data name="rbWVVeryHigh.Size" type="System.Drawing.Size, System.Drawing">
    <value>73, 17</value>
  </data>
  <data name="rbWVVeryHigh.Text" xml:space="preserve">
    <value>Sehr hoch</value>
  </data>
  <data name="rbWVHigh.Size" type="System.Drawing.Size, System.Drawing">
    <value>49, 17</value>
  </data>
  <data name="rbWVHigh.Text" xml:space="preserve">
    <value>Hoch</value>
  </data>
  <data name="rbWVFast.Size" type="System.Drawing.Size, System.Drawing">
    <value>58, 17</value>
  </data>
  <data name="rbWVFast.Text" xml:space="preserve">
    <value>Schnell</value>
  </data>
  <data name="chkEncodeWhenZeroOffset.Location" type="System.Drawing.Point, System.Drawing">
    <value>174, 62</value>
  </data>
  <data name="chkEncodeWhenZeroOffset.Size" type="System.Drawing.Size, System.Drawing">
    <value>99, 17</value>
  </data>
  <data name="chkEncodeWhenZeroOffset.Text" xml:space="preserve">
    <value>und Null-Offset</value>
  </data>
  <data name="chkArFixOffset.Size" type="System.Drawing.Size, System.Drawing">
    <value>132, 17</value>
  </data>
  <data name="chkArFixOffset.Text" xml:space="preserve">
    <value>Korrigiere Offset, falls</value>
  </data>
  <data name="chkWriteArLogOnConvert.Size" type="System.Drawing.Size, System.Drawing">
    <value>149, 17</value>
  </data>
  <data name="chkWriteArLogOnConvert.Text" xml:space="preserve">
    <value>Schreibe AccurateRip-Log</value>
  </data>
  <data name="chkWriteArTagsOnConvert.Size" type="System.Drawing.Size, System.Drawing">
    <value>155, 17</value>
  </data>
  <data name="chkWriteArTagsOnConvert.Text" xml:space="preserve">
    <value>Schreibe AccurateRip-Tags</value>
  </data>
  <data name="chkWriteArTagsOnConvert.ToolTip" xml:space="preserve">
    <value>Füge den Ausgabedateien ACCURATERIPCOUNT/ACCURATERIPCOUNTALLOFFSETS/ACCURATERIPTOTAL-Tags hinzu.  Sie können foobar2000 dazu bringen, die Werte anzuzeigen, und sehen, ob Ihre Musik korrekt kopiert wurde oder wie beliebt sie ist.</value>
  </data>
  <data name="labelEncodeWhenPercent.Size" type="System.Drawing.Size, System.Drawing">
    <value>150, 13</value>
  </data>
  <data name="labelEncodeWhenPercent.Text" xml:space="preserve">
    <value>% der verif. Tracks &gt;=</value>
  </data>
  <data name="labelEncodeWhenConfidence.Size" type="System.Drawing.Size, System.Drawing">
    <value>91, 13</value>
  </data>
  <data name="labelEncodeWhenConfidence.Text" xml:space="preserve">
    <value>mit Vertrauen &gt;=</value>
  </data>
  <data name="chkArNoUnverifiedAudio.Size" type="System.Drawing.Size, System.Drawing">
    <value>113, 17</value>
  </data>
  <data name="chkArNoUnverifiedAudio.Text" xml:space="preserve">
    <value>Nur kodieren, falls</value>
  </data>
  <data name="labelFixWhenConfidence.Text" xml:space="preserve">
    <value>mit Vertrauen &gt;=</value>
  </data>
  <data name="labelFixWhenPercent.Text" xml:space="preserve">
    <value>% der verif. Tracks &gt;=</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Verifizieren, dann konvertieren</value>
  </data>
  <data name="chkFilenamesANSISafe.Size" type="System.Drawing.Size, System.Drawing">
    <value>163, 17</value>
  </data>
  <data name="chkFilenamesANSISafe.Text" xml:space="preserve">
    <value>ANSI-Dateinamen erzwingen</value>
  </data>
  <data name="chkFilenamesANSISafe.ToolTip" xml:space="preserve">
    <value>Zur Kompatibilität mit Nicht-Unicode-Anwendungen nur Zeichen erlauben, die in der ANSI-Codepage vorhanden sind.</value>
  </data>
  <data name="chkWriteARTagsOnVerify.Size" type="System.Drawing.Size, System.Drawing">
    <value>155, 17</value>
  </data>
  <data name="chkWriteARTagsOnVerify.Text" xml:space="preserve">
    <value>Schreibe AccurateRip-Tags</value>
  </data>
  <data name="chkWriteARTagsOnVerify.ToolTip" xml:space="preserve">
    <value>Füge den Eingabedateien ACCURATERIPCOUNT/ACCURATERIPCOUNTALLOFFSETS/ACCURATERIPTOTAL-Tags hinzu. Sie können foobar2000 dazu bringen, die Werte anzuzeigen, und sehen, ob Ihre Musik korrekt kopiert wurde oder wie beliebt sie ist.</value>
  </data>
  <data name="chkHDCDDecode.Size" type="System.Drawing.Size, System.Drawing">
    <value>154, 17</value>
  </data>
  <data name="chkHDCDDecode.Text" xml:space="preserve">
    <value>Dekodiere HDCD auf 20 Bit</value>
  </data>
  <data name="chkHDCDDecode.ToolTip" xml:space="preserve">
    <value>HDCD-Dekodierung ist nicht umkehrbar. Die resultierenden Dateien können nicht auf CD gebrannt werden. 24-Bit-Audiodateien werden erstellt, aber die eigentliche Bitrate beträgt 20 Bit</value>
  </data>
  <data name="chkHDCDStopLooking.Size" type="System.Drawing.Size, System.Drawing">
    <value>163, 17</value>
  </data>
  <data name="chkHDCDStopLooking.Text" xml:space="preserve">
    <value>Nach 750 Frames abbrechen</value>
  </data>
  <data name="chkHDCDStopLooking.ToolTip" xml:space="preserve">
    <value>Nicht mehr nach HDCD-Informationen suchen, wenn sie in den ersten 10 Sekunden der CD nicht zu finden sind</value>
  </data>
  <data name="chkHDCD24bit.Size" type="System.Drawing.Size, System.Drawing">
    <value>181, 17</value>
  </data>
  <data name="chkHDCD24bit.Text" xml:space="preserve">
    <value>Speichere als 24-Bit-"verlustfrei"</value>
  </data>
  <data name="chkHDCD24bit.ToolTip" xml:space="preserve">
    <value>Wenn lossyWAV nicht verwendet wird, für Kompatibilität auf 24 Bit erweitern</value>
  </data>
  <data name="chkHDCDLW16.Size" type="System.Drawing.Size, System.Drawing">
    <value>172, 17</value>
  </data>
  <data name="chkHDCDLW16.Text" xml:space="preserve">
    <value>Speichere als 16-Bit-LossyWAV</value>
  </data>
  <data name="chkHDCDLW16.ToolTip" xml:space="preserve">
    <value>Beim Konvertieren in lossyWAV auf 16 Bit beschneiden</value>
  </data>
  <data name="chkKeepOriginalFilenames.Size" type="System.Drawing.Size, System.Drawing">
    <value>187, 17</value>
  </data>
  <data name="chkKeepOriginalFilenames.Text" xml:space="preserve">
    <value>Originale Dateinamen beibehalten</value>
  </data>
  <data name="txtSpecialExceptions.Size" type="System.Drawing.Size, System.Drawing">
    <value>137, 21</value>
  </data>
  <data name="chkRemoveSpecial.Size" type="System.Drawing.Size, System.Drawing">
    <value>176, 17</value>
  </data>
  <data name="chkRemoveSpecial.Text" xml:space="preserve">
    <value>Entferne Sonderzeichen außer:</value>
  </data>
  <data name="chkReplaceSpaces.Size" type="System.Drawing.Size, System.Drawing">
    <value>207, 17</value>
  </data>
  <data name="chkReplaceSpaces.Text" xml:space="preserve">
    <value>Ersetze Leerzeichen mit Unterstrichen</value>
  </data>
  <data name="txtTrackFilenameFormat.Size" type="System.Drawing.Size, System.Drawing">
    <value>137, 21</value>
  </data>
  <data name="lblTrackFilenameFormat.Size" type="System.Drawing.Size, System.Drawing">
    <value>69, 13</value>
  </data>
  <data name="lblTrackFilenameFormat.Text" xml:space="preserve">
    <value>Trackformat:</value>
  </data>
  <data name="lblSingleFilenameFormat.Size" type="System.Drawing.Size, System.Drawing">
    <value>92, 13</value>
  </data>
  <data name="lblSingleFilenameFormat.Text" xml:space="preserve">
    <value>Einzelformat:</value>
  </data>
  <data name="txtSingleFilenameFormat.Size" type="System.Drawing.Size, System.Drawing">
    <value>137, 21</value>
  </data>
  <data name="grpAudioFilenames.Location" type="System.Drawing.Point, System.Drawing">
    <value>283, 6</value>
  </data>
  <data name="grpAudioFilenames.Size" type="System.Drawing.Size, System.Drawing">
    <value>246, 204</value>
  </data>
  <data name="grpAudioFilenames.Text" xml:space="preserve">
    <value>Audio-Dateinamen</value>
  </data>
  <data name="rbAPEinsane.Size" type="System.Drawing.Size, System.Drawing">
    <value>65, 17</value>
  </data>
  <data name="rbAPEinsane.Text" xml:space="preserve">
    <value>Verrückt</value>
  </data>
  <data name="rbAPEextrahigh.Size" type="System.Drawing.Size, System.Drawing">
    <value>73, 17</value>
  </data>
  <data name="rbAPEextrahigh.Text" xml:space="preserve">
    <value>Sehr hoch</value>
  </data>
  <data name="rbAPEhigh.Size" type="System.Drawing.Size, System.Drawing">
    <value>49, 17</value>
  </data>
  <data name="rbAPEhigh.Text" xml:space="preserve">
    <value>Hoch</value>
  </data>
  <data name="rbAPEfast.Size" type="System.Drawing.Size, System.Drawing">
    <value>58, 17</value>
  </data>
  <data name="rbAPEfast.Text" xml:space="preserve">
    <value>Schnell</value>
  </data>
  <data name="chkWriteARLogOnVerify.Size" type="System.Drawing.Size, System.Drawing">
    <value>149, 17</value>
  </data>
  <data name="chkWriteARLogOnVerify.Text" xml:space="preserve">
    <value>Schreibe AccurateRip-Log</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Verifizieren</value>
  </data>
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>49, 13</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Qualität:</value>
  </data>
  <data name="grpHDCD.Size" type="System.Drawing.Size, System.Drawing">
    <value>205, 165</value>
  </data>
  <data name="grpHDCD.Text" xml:space="preserve">
    <value>HDCD-Optionen</value>
  </data>
  <data name="chkHDCDDetect.Size" type="System.Drawing.Size, System.Drawing">
    <value>148, 17</value>
  </data>
  <data name="chkHDCDDetect.Text" xml:space="preserve">
    <value>Erkenne HDCD-Kodierung</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Erweiterte Einstellungen</value>
  </data>
  <data name="tabPage5.Text" xml:space="preserve">
    <value>FLAC</value>
  </data>
  <data name="tabPage6.Text" xml:space="preserve">
    <value>WavPack</value>
  </data>
  <data name="tabPage7.Text" xml:space="preserve">
    <value>Monkey's Audio</value>
  </data>
  <data name="tabPage8.Text" xml:space="preserve">
    <value>LossyWAV</value>
  </data>
  <data name="tabPage9.Text" xml:space="preserve">
    <value>Benutzerdefiniert</value>
  </data>
  <data name="chkUDC1ID3v2.Text" xml:space="preserve">
    <value>ID3v2-Tags</value>
  </data>
  <data name="chkUDC1APEv2.Text" xml:space="preserve">
    <value>APEv2-Tags</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Erweiterung</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Decoder</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Parameter</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Encoder</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Parameter</value>
  </data>
</root>